{"version":3,"sources":["assets/software-logo.svg","components/lib.tsx","AuthProvider.ts","utils/index.ts","utils/http.ts","utils/useAsync.ts","context/AuthContext.tsx","utils/user.ts","components/idSelect.tsx","components/userSelect.tsx","screens/projectList/SearchPanel.tsx","components/pin.tsx","utils/organization.ts","utils/reorder.ts","utils/optimisticOptions.ts","utils/url.ts","utils/project.ts","screens/projectList/list.tsx","screens/projectList/index.tsx","components/dragAndDrop.tsx","components/profiler.tsx","utils/group.ts","utils/task.ts","utils/board.ts","assets/task.svg","assets/bug.svg","components/mark.tsx","screens/board/createBoard.tsx","screens/board/createTask.tsx","screens/board/boardColumn.tsx","components/taskTypeSelect.tsx","screens/board/searchPanel.tsx","components/groupSelect.tsx","screens/board/taskModal.tsx","screens/board/index.tsx","screens/task/createTaskGroup.tsx","screens/task/index.tsx","screens/project/index.tsx","components/organizationSelect.tsx","screens/projectList/projectModal.tsx","components/projectPopover.tsx","components/userPopover.tsx","AuthenticatedApp.tsx","assets/logo.svg","assets/left.svg","assets/right.svg","unauthenticatedApp/register.tsx","unauthenticatedApp/login.tsx","unauthenticatedApp/index.tsx","App.tsx","reportWebVitals.ts","context/index.tsx","index.tsx"],"names":["_defs","_g","Row","styled","div","props","between","undefined","marginBottom","gap","FullPage","FullPageLoading","size","ErrorBox","value","error","message","Text","type","ScreenContainer","ButtonNoPadding","Button","apiUrl","process","handleUserResponse","res","data","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","timeout","setTimeout","clearTimeout","useDocumentTitle","title","keepOnUnmount","oldTitle","useRef","document","current","resetRoute","window","location","href","origin","http","endpoint","a","req","headers","customConfig","config","method","toUpperCase","qs","stringify","body","JSON","fetch","credentials","mode","then","response","ok","json","errno","Promise","reject","catch","console","useHttp","defaultInitialState","stat","useAsync","initialState","state","setState","setData","setError","isIdle","isLoading","isError","isSuccess","run","promise","Error","initUser","user","AuthContext","React","createContext","AuthProvider","callback","children","setUser","Provider","login","form","param","register","logout","useAuth","context","useContext","useUsers","client","useQuery","IdSelect","onChange","defaultOptionName","options","restProps","style","minWidth","length","toNumber","Option","map","option","id","decodeURI","name","isNaN","Number","UserSelect","users","SearchPanel","setParam","layout","Item","placeholder","keyword","e","target","principalId","Pin","checked","onCheckedChange","count","num","useOrganization","insert","list","from","to","removedItem","splice","insertTask","isDifferenBoard","copiedList","log","useConfig","queryKey","queryClient","useQueryClient","onSuccess","key","invalidateQueries","removeQueries","inactive","onMutate","previousItems","getQueryData","setQueryData","old","pin","onError","newItem","useDeleteConfig","filter","item","projectId","useAddConfig","useReorderBoardConfig","fromId","referenceId","moveIndex","findIndex","targetIndex","reorder","useReorderTaskConfig","orderedList","toBoardId","fromBoardId","reorderTask","boardId","useUrlQueryParam","keys","useSearchParams","searchParams","setSearchParams","useSetUrlSearchParam","stateKeys","useMemo","obj","filteredEntries","Object","entries","includes","fromEntries","subset","params","object","result","forEach","cleanObject","useFavroites","useProjects","useEditProject","useMutation","useEditConfig","usePinProject","usePinConfig","useAddProject","useProject","enabled","Boolean","useProjectSearchParams","useProjectQueryKey","useProjectModal","projectCreate","setProjectCreate","editingProjectId","setEditingProjectId","setUrlParams","editingProject","projectModalOpen","open","close","isRefresh","startEdit","List","favorites","mutate","organizations","rowKey","pagination","columns","disabled","render","project","find","favorite","String","projectName","organization","organizationId","createTime","dayjs","format","More","deleteProject","useDeleteProject","overlay","onClick","Modal","confirm","content","okText","onOk","confirmDeleteProject","ProjectListScreen","padding","loading","dataSource","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSoftwareLogo","_ref","svgRef","titleId","viewBox","xmlns","focusable","className","ref","x1","y1","x2","y2","stopColor","offset","stroke","strokeWidth","fillRule","d","fill","ForwardRef","Drop","provided","isValidElement","cloneElement","droppableProps","innerRef","DropChild","forwardRef","Drag","dragHandleProps","draggableProps","queue","setInterval","Profiler","metadata","phases","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions","push","useGroups","useProjectIdInUrl","useLocation","pathname","match","useProjectInUrl","useGroupSearchParams","useGroupQueryKey","useTasks","debouncedParam","useEditTask","useEditTaskConfig","useTaskTypes","useBoards","useBoardSearchParams","useBoardQueryKey","useTaskSearchParam","typeId","processorId","tagId","useTaskQueryKey","useTaskModal","editingTaskId","setEditingTaskId","useTask","editingTask","useCallback","Mark","arr","split","str","index","color","CreateBoard","setName","addBoard","useAddBoard","mutateAsync","submit","Container","onPressEnter","CreateTask","addTask","useAddTask","inputMode","setInputMode","toggle","onBlur","autoFocus","TaskTypeIcon","taskTypes","taskType","alt","src","taskIcon","bugIcon","TaskCard","task","cursor","BoardColumn","board","allTasks","tasks","TaskContainer","direction","droppableId","minHeight","taskIndex","draggableId","useDeleteBoard","cancelText","TaskTypeSelect","searchParam","setSearchParam","width","GroupSelect","groups","TaskModal","Form","useForm","editTask","deleteTask","useDeleteTask","getFieldsValue","taskData","setFieldsValue","forceRender","onCancel","resetFields","confirmLoading","visible","initialValues","label","rules","required","textAlign","fontSize","labelCol","span","wrapperCol","BoardScreen","currentProject","boards","boardIsLoading","onDragEnd","useDragEnd","ColumnContainer","display","reorderBoard","useReorderBoard","useReorderTask","destination","toId","fromTask","toTask","CreateTaskGroup","useAddGroup","onFinish","values","onClose","destroyOnClose","htmlType","TaskGroupScreen","deleteGroup","useDeleteGroup","groupCreateOpen","setGroupCreateOpen","overflow","itemLayout","renderItem","group","Meta","taskGroup","ProjectScreen","routeType","units","useRouteType","Aside","selectedKeys","Main","path","element","aside","OrganizationSelect","ProjectModal","mutateLoading","Date","ProjectPopover","projects","refetch","pinnedProjects","ContentContainer","placement","onVisibleChange","UserPopover","AuthenticatedApp","PageHeader","Header","HeaderLeft","HeaderRight","preventDefault","main","RegisterScreen","handleSubmit","password","confirmPassword","LongButton","LoginScreen","UnauthenticatedApp","isRegister","setIsRegister","Background","ShadowCard","Title","h2","left","right","header","logo","Card","App","initialIsOpen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","AppProviders","QueryClient","defaultOptions","queries","refetchOnWindowFocus","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d835832f.chunk.js","sourcesContent":["var _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSoftwareLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 179 32\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    focusable: \"false\",\n    \"aria-hidden\": \"true\",\n    className: \"css-sq9aeg-Logo\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    x1: \"97.6553341%\",\n    y1: \"35.6591143%\",\n    x2: \"37.202032%\",\n    y2: \"75.4891864%\",\n    id: \"uid392-1\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0052CC\",\n    offset: \"7%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2684FF\",\n    offset: \"100%\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    x1: \"8.43371138%\",\n    y1: \"60.1495759%\",\n    x2: \"64.1161517%\",\n    y2: \"23.5790285%\",\n    id: \"uid392-2\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#0052CC\",\n    offset: \"0%\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#2684FF\",\n    offset: \"100%\"\n  })))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    stroke: \"none\",\n    strokeWidth: 1,\n    fillRule: \"nonzero\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3881081,27.9242105 C12.4881804,26.8071817 13.1062496,25.2917664 13.1062496,23.7115789 C13.1062496,22.1313915 12.4881804,20.6159762 11.3881081,19.4989474 L11.3881081,19.4989474 L3.74837838,11.7621053 L0.273513514,15.2926316 C-0.0900771727,15.6625064 -0.0900771727,16.2617042 0.273513514,16.6315789 L11.3881081,27.9242105 L11.3881081,27.9242105 Z\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22.5027027,15.2926316 L11.3881081,4 L11.3881081,4 L11.3539189,4.03473684 L11.3539189,4.03473684 C9.08852466,6.36456187 9.09963243,10.1156459 11.3787838,12.4315789 L19.0247297,20.1652632 L22.5027027,16.6315789 C22.8662934,16.2617042 22.8662934,15.6625064 22.5027027,15.2926316 Z\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.3881081,12.4252632 C9.10895676,10.1093301 9.09784899,6.35824608 11.3632432,4.02842105 L3.43445946,12.0810526 L7.58067568,16.2936842 L11.3881081,12.4252632 Z\",\n    fill: \"url(#uid392-1)\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.1893243,15.6368421 L11.3881081,19.4989474 C12.4881804,20.6159762 13.1062496,22.1313915 13.1062496,23.7115789 C13.1062496,25.2917664 12.4881804,26.8071817 11.3881081,27.9242105 L19.3355405,19.8494737 L15.1893243,15.6368421 Z\",\n    fill: \"url(#uid392-2)\",\n    fillRule: \"nonzero\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M36.07,18.956 C36.07,20.646 35.394,21.842 33.418,21.842 C32.56,21.842 31.702,21.686 31,21.4 L31,23.662 C31.65,23.896 32.586,24.104 33.808,24.104 C37.032,24.104 38.41,21.946 38.41,18.8 L38.41,6.918 L36.07,6.918 L36.07,18.956 Z M41.894,7.568 C41.894,8.556 42.544,9.128 43.454,9.128 C44.364,9.128 45.014,8.556 45.014,7.568 C45.014,6.58 44.364,6.008 43.454,6.008 C42.544,6.008 41.894,6.58 41.894,7.568 Z M42.31,24 L44.546,24 L44.546,11 L42.31,11 L42.31,24 Z M47.926,24 L50.11,24 L50.11,16.33 C50.11,13.574 51.852,12.716 54.712,13.002 L54.712,10.818 C52.164,10.662 50.864,11.754 50.11,13.288 L50.11,11 L47.926,11 L47.926,24 Z M65.45,24 L65.45,21.66 C64.618,23.376 63.058,24.26 61.056,24.26 C57.598,24.26 55.856,21.322 55.856,17.5 C55.856,13.834 57.676,10.74 61.316,10.74 C63.214,10.74 64.67,11.598 65.45,13.288 L65.45,11 L67.686,11 L67.686,24 L65.45,24 Z M58.092,17.5 C58.092,20.62 59.34,22.18 61.654,22.18 C63.656,22.18 65.45,20.906 65.45,18.02 L65.45,16.98 C65.45,14.094 63.812,12.82 61.914,12.82 C59.392,12.82 58.092,14.484 58.092,17.5 Z M86.926,19.294 C86.926,16.226 84.898,15.056 81.284,14.146 C78.268,13.392 77.176,12.69 77.176,11.286 C77.176,9.726 78.502,8.946 80.738,8.946 C82.506,8.946 84.352,9.258 86.068,10.246 L86.068,7.906 C84.898,7.256 83.312,6.658 80.842,6.658 C76.864,6.658 74.836,8.634 74.836,11.286 C74.836,14.094 76.552,15.42 80.4,16.356 C83.65,17.136 84.586,17.942 84.586,19.45 C84.586,20.958 83.624,21.972 81.05,21.972 C78.788,21.972 76.344,21.374 74.758,20.542 L74.758,22.934 C76.084,23.61 77.618,24.26 80.92,24.26 C85.158,24.26 86.926,22.258 86.926,19.294 Z M95.09,24.26 C91.19,24.26 88.902,21.374 88.902,17.474 C88.902,13.574 91.19,10.74 95.09,10.74 C98.964,10.74 101.226,13.574 101.226,17.474 C101.226,21.374 98.964,24.26 95.09,24.26 Z M95.09,12.82 C92.308,12.82 91.086,15.004 91.086,17.474 C91.086,19.944 92.308,22.18 95.09,22.18 C97.846,22.18 99.042,19.944 99.042,17.474 C99.042,15.004 97.846,12.82 95.09,12.82 Z M106.92,9.622 C106.92,8.452 107.596,7.646 108.974,7.646 C109.494,7.646 109.988,7.698 110.378,7.776 L110.378,5.722 C109.988,5.618 109.546,5.514 108.87,5.514 C106.088,5.514 104.736,7.152 104.736,9.57 L104.736,11 L102.63,11 L102.63,13.08 L104.736,13.08 L104.736,24 L106.92,24 L106.92,13.08 L110.274,13.08 L110.274,11 L106.92,11 L106.92,9.622 Z M115.786,19.892 L115.786,13.08 L119.244,13.08 L119.244,11 L115.786,11 L115.786,8.244 L113.602,8.244 L113.602,11 L111.496,11 L111.496,13.08 L113.602,13.08 L113.602,19.944 C113.602,22.362 114.954,24 117.736,24 C118.412,24 118.854,23.896 119.244,23.792 L119.244,21.634 C118.854,21.712 118.36,21.816 117.84,21.816 C116.462,21.816 115.786,21.036 115.786,19.892 Z M125.432,24 L128.292,24 L130.528,17.708 L131.724,13.704 L132.92,17.708 L135.156,24 L138.016,24 L142.8,11 L140.33,11 L136.586,22.024 L132.79,11 L130.658,11 L126.862,22.024 L123.118,11 L120.648,11 L125.432,24 Z M153.538,24 L153.538,21.66 C152.706,23.376 151.146,24.26 149.144,24.26 C145.686,24.26 143.944,21.322 143.944,17.5 C143.944,13.834 145.764,10.74 149.404,10.74 C151.302,10.74 152.758,11.598 153.538,13.288 L153.538,11 L155.774,11 L155.774,24 L153.538,24 Z M146.18,17.5 C146.18,20.62 147.428,22.18 149.742,22.18 C151.744,22.18 153.538,20.906 153.538,18.02 L153.538,16.98 C153.538,14.094 151.9,12.82 150.002,12.82 C147.48,12.82 146.18,14.484 146.18,17.5 Z M159.154,24 L161.338,24 L161.338,16.33 C161.338,13.574 163.08,12.716 165.94,13.002 L165.94,10.818 C163.392,10.662 162.092,11.754 161.338,13.288 L161.338,11 L159.154,11 L159.154,24 Z M178.108,23.48 C177.042,24.052 175.404,24.26 174.078,24.26 C169.216,24.26 167.084,21.452 167.084,17.474 C167.084,13.548 169.268,10.74 173.22,10.74 C177.224,10.74 178.836,13.522 178.836,17.474 L178.836,18.488 L169.346,18.488 C169.658,20.698 171.088,22.128 174.156,22.128 C175.664,22.128 176.938,21.842 178.108,21.426 L178.108,23.48 Z M173.116,12.768 C170.75,12.768 169.554,14.302 169.32,16.564 L176.574,16.564 C176.444,14.146 175.352,12.768 173.116,12.768 Z\",\n    fill: \"inherit\",\n    fillRule: \"evenodd\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSoftwareLogo);\nexport default __webpack_public_path__ + \"static/media/software-logo.ec204298.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\nimport { Button, Spin, Typography } from 'antd';\n\nexport const Row = styled.div<{\n  gap?: number | boolean;\n  between?: boolean;\n  marginBottom?: number;\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => (props.between ? 'space-between' : undefined)};\n  margin-bottom: ${(props) => props.marginBottom + 'rem'};\n\n  > * {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n    margin-right: ${(props) =>\n      typeof props.gap === 'number'\n        ? props.gap + 'rem'\n        : props.gap\n        ? '2rem'\n        : undefined};\n  }\n`;\n\nconst FullPage = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FullPageLoading = () => (\n  <FullPage>\n    <Spin size=\"large\" />\n  </FullPage>\n);\n\nconst isError = (value: any): value is Error => value?.message;\n\nexport const ErrorBox = ({ error }: { error: unknown }) => {\n  if (isError(error)) {\n    return <Typography.Text type={'danger'}>{error?.message}</Typography.Text>;\n  }\n  return null;\n};\n\nexport const ScreenContainer = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`;\n","import { User } from './types/user';\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\ninterface ResponseData<T> {\n  data: T | null;\n  errno: number;\n  message: string | null;\n}\n\nexport const handleUserResponse = (res: ResponseData<User>) => {\n  return res.data;\n};\n\nexport const register = (param: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/api/user/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n    mode: 'cors',\n    body: JSON.stringify(param),\n  }).then(async (response) => {\n    if (response.ok) {\n      const res: ResponseData<User> = await response.json();\n      if (res.errno === 0) {\n        return handleUserResponse(res);\n      } else {\n        return Promise.reject(res);\n      }\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\nexport const login = (param: { username: string; password: string }) => {\n  return fetch(`${apiUrl}/api/user/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    credentials: 'include',\n    mode: 'cors',\n    body: JSON.stringify(param),\n  }).then(async (response) => {\n    if (response.ok) {\n      const res: ResponseData<User> = await response.json();\n      if (res.errno === 0) {\n        return handleUserResponse(res);\n      } else {\n        return Promise.reject(res);\n      }\n    } else {\n      return Promise.reject(await response.json());\n    }\n  });\n};\n\nexport const logout = () => {\n  return fetch(`${apiUrl}/api/user/logout`, {\n    credentials: 'include',\n    mode: 'cors',\n  }).then(async (response) => {\n    if (response.ok) {\n      return handleUserResponse(await response.json());\n    } else {\n      return Promise.reject();\n    }\n  });\n};\n","import { useEffect, useRef, useState } from 'react';\n\nexport const isVoid = (value: unknown) =>\n  value === undefined || value === null || value === '';\n\nexport const cleanObject = (object?: { [key: string]: unknown }) => {\n  if (!object) return {};\n  const result = { ...object };\n  Object.keys(result).forEach((key) => {\n    const value = result[key];\n    if (isVoid(value)) {\n      delete result[key];\n    }\n  });\n  return result;\n};\n\nexport const useMount = (callback: () => void) => {\n  useEffect(() => {\n    callback();\n  }, []);\n};\n\nexport const useDebounce = <T>(value: T, delay?: number): T => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setDebouncedValue(value), delay);\n    // excute after the last useEffect finish\n    return () => clearTimeout(timeout);\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport const useArray = <T>(initialArray: T[]) => {\n  const [value, setValue] = useState(initialArray);\n  return {\n    value,\n    setValue,\n    add: (item: T) => setValue([...value, item]),\n    clear: () => setValue([]),\n    removeIndex: (index: number) => {\n      const copy = [...value];\n      copy.splice(index, 1);\n      setValue(copy);\n    },\n  };\n};\n\nexport const useDocumentTitle = (\n  title: string,\n  keepOnUnmount: boolean = true\n) => {\n  const oldTitle = useRef(document.title).current;\n\n  useEffect(() => {\n    document.title = title;\n  }, [title]);\n\n  useEffect(() => {\n    return () => {\n      if (!keepOnUnmount) {\n        document.title = oldTitle;\n      }\n    };\n  }, [keepOnUnmount, oldTitle]);\n};\n\nexport const resetRoute = () => (window.location.href = window.location.origin);\n\nexport const subset = <\n  O extends { [key in string]: unknown },\n  K extends keyof O\n>(\n  obj: O,\n  keys: K[]\n) => {\n  const filteredEntries = Object.entries(obj).filter(([key]) =>\n    keys.includes(key as K)\n  );\n  return Object.fromEntries(filteredEntries) as Pick<O, K>;\n};\n","import qs from 'qs';\n\ninterface ResponseData {\n  data: any;\n  errno: number;\n  message: string | null;\n}\n\nconst apiUrl = process.env.REACT_APP_API_URL;\n\ninterface Config extends RequestInit {\n  req?: object;\n}\n\nexport const http = async (\n  endpoint: string,\n  { req, headers, ...customConfig }: Config\n) => {\n  const config = {\n    method: 'GET',\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': req ? 'application/json' : '',\n    },\n    ...customConfig,\n  };\n\n  if (config.method.toUpperCase() === 'GET') {\n    endpoint += `?${qs.stringify(req)}`;\n  } else {\n    config.body = JSON.stringify(req || {});\n  }\n\n  return window\n    .fetch(`${apiUrl}/${endpoint}`, {\n      ...config,\n      credentials: 'include',\n      mode: 'cors',\n    })\n    .then(async (response) => {\n      if (response.ok) {\n        const res: ResponseData = await response.json();\n        if (res.errno === 0) {\n          return res.data;\n        } else {\n          return Promise.reject(res.message);\n        }\n      } else {\n        return Promise.reject(req);\n      }\n    })\n    .catch((error) => {\n      console.error('Error:', error);\n    });\n};\n\nexport const useHttp = () => {\n  return (endpoint: string, config: Config) => http(endpoint, config);\n};\n","import { useState } from 'react';\n\ninterface State<D> {\n  error: Error | null;\n  data: D | null;\n  stat: 'idle' | 'loading' | 'error' | 'success';\n}\n\nconst defaultInitialState: State<null> = {\n  stat: 'idle',\n  data: null,\n  error: null,\n};\n\nexport const useAsync = <D>(initialState?: State<D>) => {\n  const [state, setState] = useState<State<D>>({\n    ...defaultInitialState,\n    ...initialState,\n  });\n\n  const setData = (data: D) =>\n    setState({\n      data,\n      stat: 'success',\n      error: null,\n    });\n\n  const setError = (error: Error) =>\n    setState({\n      error,\n      stat: 'error',\n      data: null,\n    });\n\n  const run = (promise: Promise<D>) => {\n    if (!promise || !promise.then) {\n      throw new Error('Promise Type of Data Is Required!');\n    }\n\n    setState({ ...state, stat: 'loading' });\n    return promise\n      .then((data) => {\n        setData(data);\n        return data;\n      })\n      .catch((error) => {\n        setError(error);\n        return Promise.reject(error);\n      });\n  };\n\n  return {\n    isIdle: state.stat === 'idle',\n    isLoading: state.stat === 'loading',\n    isError: state.stat === 'error',\n    isSuccess: state.stat === 'success',\n    run,\n    setData,\n    setError,\n    ...state,\n  };\n};\n","import React, { ReactNode } from 'react';\nimport * as auth from '../AuthProvider';\nimport { FullPageLoading } from '../components/lib';\nimport { User } from '../types/user';\nimport { useMount } from '../utils';\nimport { http } from '../utils/http';\nimport { useAsync } from '../utils/useAsync';\n\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n\nconst initUser = async () => {\n  let user: User | null = null;\n  await http('api/user/info', {}).then((res) => (user = res));\n  return user;\n};\n\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      register: (form: AuthForm) => Promise<void>;\n      login: (form: AuthForm) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const {\n    data: user,\n    isLoading,\n    isIdle,\n    run,\n    setData: setUser,\n  } = useAsync<User | null>();\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const logout = () => auth.logout().then(setUser);\n\n  useMount(() => {\n    run(initUser());\n  });\n\n  if (isIdle || isLoading) {\n    return <FullPageLoading />;\n  }\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within AuthProvider');\n  }\n  return context;\n};\n","import { useQuery } from 'react-query';\nimport { User } from '../types/user';\nimport { useHttp } from './http';\n\nexport const useUsers = (param?: Partial<User>) => {\n  const client = useHttp();\n\n  return useQuery<User[]>(['api/user', param], () =>\n    client('api/user/list', {})\n  );\n};\n","import { Select } from 'antd';\nimport { Raw } from '../types/raw';\n\ntype SelectProps = React.ComponentProps<typeof Select>;\n\ninterface IdSelectProps\n  extends Omit<SelectProps, 'value' | 'onChange' | 'options'> {\n  value?: Raw | null | undefined;\n  onChange?: (value?: number) => void;\n  defaultOptionName?: string;\n  options?: { name: string; id: number }[];\n}\n\nexport const IdSelect = (props: IdSelectProps) => {\n  const { value, onChange, defaultOptionName, options, ...restProps } = props;\n  return (\n    <Select\n      style={{ minWidth: 100 }}\n      value={options?.length ? toNumber(value) : 0}\n      onChange={(value) => onChange?.(toNumber(value) || undefined)}\n      {...restProps}\n    >\n      {defaultOptionName ? (\n        <Select.Option value={0}>{defaultOptionName}</Select.Option>\n      ) : null}\n      {options?.map((option) => (\n        <Select.Option key={option.id} value={option.id}>\n          {decodeURI(option.name)}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n\nconst toNumber = (value: unknown) => (isNaN(Number(value)) ? 0 : Number(value));\n","import React from 'react';\nimport { useUsers } from '../utils/user';\nimport { IdSelect } from './idSelect';\n\nexport const UserSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const { data: users } = useUsers();\n  return <IdSelect options={users || []} {...props} />;\n};\n","import { Input, Form } from 'antd';\nimport { UserSelect } from '../../components/userSelect';\nimport { User } from '../../types/user';\n\ninterface SearchPanelProps {\n  users: User[];\n  param: {\n    keyword: string;\n    principalId: number | undefined;\n  };\n  setParam: (param: SearchPanelProps['param']) => void;\n}\n\nexport const SearchPanel = ({ users, param, setParam }: SearchPanelProps) => {\n  return (\n    <Form style={{ marginBottom: '2rem' }} layout={'inline'}>\n      <Form.Item>\n        <Input\n          placeholder={'Project Name'}\n          type=\"text\"\n          value={param.keyword}\n          onChange={(e) =>\n            setParam({\n              ...param,\n              keyword: e.target.value,\n            })\n          }\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <UserSelect\n          defaultOptionName={'Principal'}\n          value={param.principalId}\n          onChange={(value) =>\n            setParam({\n              ...param,\n              principalId: value,\n            })\n          }\n        ></UserSelect>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { Rate } from 'antd';\n\ninterface PinProps extends React.ComponentProps<typeof Rate> {\n  checked: boolean;\n  onCheckedChange?: (checked: boolean) => void;\n}\n\nexport const Pin = ({ checked, onCheckedChange, ...restProps }: PinProps) => {\n  return (\n    <Rate\n      count={1}\n      value={checked ? 1 : 0}\n      onChange={(num) => onCheckedChange?.(!!num)}\n      {...restProps}\n    />\n  );\n};\n","import { useQuery } from 'react-query';\nimport { Organization } from '../types/organization';\nimport { useHttp } from './http';\n\nexport const useOrganization = (param?: Partial<Organization>) => {\n  const client = useHttp();\n\n  return useQuery<Organization[]>(['organization', param], () =>\n    client('api/organization/list', {})\n  );\n};\n","export const reorder = ({\n  fromId,\n  referenceId,\n  list,\n}: {\n  fromId: number;\n  referenceId: number;\n  list: { id: number }[];\n}) => {\n  const copiedList = [...list];\n  const moveIndex = copiedList.findIndex((item) => item.id === fromId);\n  if (!referenceId) {\n    return insert([...copiedList], moveIndex, copiedList.length - 1);\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\n  return insert([...copiedList], moveIndex, targetIndex);\n};\n\nconst insert = (list: unknown[], from: number, to: number) => {\n  const removedItem = list.splice(from, 1)[0];\n  list.splice(to, 0, removedItem);\n  return list;\n};\n\nconst insertTask = (\n  list: unknown[],\n  from: number,\n  to: number,\n  isDifferenBoard: boolean\n) => {\n  const copiedList = [...list];\n  console.log('insert,task,list,pre', copiedList);\n  console.log('insert,task,from,to', from, to);\n  const removedItem = list.splice(from, 1)[0];\n  if (from < to && isDifferenBoard) {\n    to = to - 1;\n  }\n  list.splice(to, 0, removedItem);\n  console.log('insert,task,list,after', list);\n  return list;\n};\n\nexport const reorderTask = ({\n  fromId,\n  referenceId,\n  list,\n  toBoardId,\n  fromBoardId,\n}: {\n  fromId: number;\n  referenceId: number;\n  list: { id: number }[];\n  toBoardId: number;\n  fromBoardId: number;\n}) => {\n  const copiedList = [...list];\n  const moveIndex = copiedList.findIndex((item) => item.id === fromId);\n\n  const isDifferenBoard = !(toBoardId === fromBoardId);\n  if (!referenceId) {\n    return insertTask(\n      [...copiedList],\n      moveIndex,\n      copiedList.length - 1,\n      isDifferenBoard\n    );\n  }\n  const targetIndex = copiedList.findIndex((item) => item.id === referenceId);\n  return insertTask([...copiedList], moveIndex, targetIndex, isDifferenBoard);\n};\n","import { QueryKey, useQueryClient } from 'react-query';\nimport { Task } from '../types/task';\nimport { reorder, reorderTask } from './reorder';\n\nexport const useConfig = (\n  queryKey: QueryKey,\n  callback: (target: any, old?: any[]) => any[]\n) => {\n  const queryClient = useQueryClient();\n  return {\n    onSuccess: () => {\n      const qk = queryKey as unknown[];\n      const key = qk[0] as string;\n      queryClient.invalidateQueries(key);\n      queryClient.removeQueries(key, { inactive: true });\n    },\n    async onMutate(target: any) {\n      const previousItems = queryClient.getQueryData(queryKey);\n      queryClient.setQueryData(queryKey, (old?: any[]) => {\n        target.pin = target.pin ? 1 : 0;\n        console.log('onMutate_queryKey, ', queryKey);\n        console.log('onMutate_target, ', target);\n        console.log('onMutate_old, ', old);\n        return callback(target, old);\n      });\n      return { previousItems };\n    },\n    onError(error: any, newItem: any, context: any) {\n      queryClient.setQueryData(queryKey, context.previousItems);\n    },\n  };\n};\n\nexport const useDeleteConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) =>\n      old?.filter((item) => item.projectId !== target.projectId) || []\n  );\n\nexport const useEditConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) =>\n      old?.map((item) =>\n        item.projectId === target.projectId ? { ...item, ...target } : item\n      ) || []\n  );\n\nexport const useEditTaskConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) =>\n      old?.map((item) =>\n        item.id === target.id ? { ...item, ...target } : item\n      ) || []\n  );\n\nexport const usePinConfig = (queryKey: QueryKey) =>\n  useConfig(\n    queryKey,\n    (target, old) =>\n      old?.map((item) =>\n        item.projectId === target.projectId ? { ...item, ...target } : item\n      ) || []\n  );\n\nexport const useAddConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => (old ? [...old, target] : []));\n\nexport const useReorderBoardConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => reorder({ list: old, ...target }));\n\nexport const useReorderTaskConfig = (queryKey: QueryKey) =>\n  useConfig(queryKey, (target, old) => {\n    console.log('list,target,', target);\n    console.log('list,old,', old);\n    const orderedList = reorderTask({ list: old, ...target }) as Task[];\n    console.log('list,orderedList,', orderedList);\n    const map = orderedList.map((item) =>\n      item.id === target.fromId ? { ...item, boardId: target.toBoardId } : item\n    );\n    console.log('list,orderedList,map,', map);\n    return map;\n  });\n","import { useMemo, useState } from 'react';\nimport { URLSearchParamsInit, useSearchParams } from 'react-router-dom';\nimport { cleanObject, subset } from '.';\n\nexport const useUrlQueryParam = <T extends string>(keys: T[]) => {\n  const [searchParams] = useSearchParams();\n  const setSearchParams = useSetUrlSearchParam();\n  const [stateKeys] = useState(keys);\n  return [\n    useMemo(\n      () =>\n        subset(Object.fromEntries(searchParams), stateKeys) as {\n          [key in T]: string;\n        },\n      [searchParams, stateKeys]\n    ),\n    (params: Partial<{ [key in T]: unknown }>) => {\n      return setSearchParams(params);\n    },\n  ] as const;\n};\n\nexport const useSetUrlSearchParam = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  return (params: { [key in string]: unknown }) => {\n    const obj = cleanObject({\n      ...Object.fromEntries(searchParams),\n      ...params,\n    }) as URLSearchParamsInit;\n    return setSearchParams(obj);\n  };\n};\n","import { useMemo } from 'react';\nimport { QueryKey, useQuery, useMutation } from 'react-query';\nimport { Pin } from '../types/pin';\nimport { Project } from '../types/project';\nimport { useHttp } from './http';\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditConfig,\n  usePinConfig,\n} from './optimisticOptions';\nimport { useSetUrlSearchParam, useUrlQueryParam } from './url';\n\nexport const useFavroites = (param?: Partial<Project>) => {\n  const client = useHttp();\n\n  return useQuery<Pin[]>(['project', 'pin'], () =>\n    client('api/favorite/list', {})\n  );\n};\n\nexport const useProjects = (param?: Partial<Project>) => {\n  const client = useHttp();\n\n  return useQuery<Project[]>(['project', param], () =>\n    client('api/project/list', { req: param })\n  );\n};\n\nexport const useEditProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: Partial<Project>) => {\n    return client(`api/project/${params.projectId}`, {\n      method: 'PATCH',\n      req: params,\n    });\n  }, useEditConfig(queryKey));\n};\n\nexport const usePinProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: Partial<Project>) => {\n    return client(`api/favorite/${params.projectId}`, {\n      method: 'POST',\n      req: params,\n    });\n  }, usePinConfig(queryKey));\n};\n\nexport const useAddProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Project>) =>\n      client(`api/project`, {\n        method: 'POST',\n        req: params,\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeleteProject = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    ({ projectId }: { projectId: number }) =>\n      client(`api/project/${projectId}`, {\n        method: 'DELETE',\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport const useProject = (id: number) => {\n  const client = useHttp();\n  return useQuery<Project>(\n    ['project', { id }],\n    () => client(`api/project/${id}`, {}),\n    { enabled: Boolean(id) }\n  );\n};\n\nexport const useProjectSearchParams = () => {\n  const [param, setParam] = useUrlQueryParam(['keyword', 'principalId']);\n  return [\n    useMemo(\n      () => ({\n        ...param,\n        principalId: Number(param.principalId) || undefined,\n      }),\n      [param]\n    ),\n    setParam,\n  ] as const;\n};\n\nexport const useProjectQueryKey = () => {\n  const [params] = useProjectSearchParams();\n  return ['project', params];\n};\n\nexport const useProjectPinQueryKey = () => {\n  return ['project', 'pin'];\n};\n\nexport const useProjectModal = () => {\n  const [{ projectCreate }, setProjectCreate] = useUrlQueryParam([\n    'projectCreate',\n  ]);\n\n  const [{ editingProjectId }, setEditingProjectId] = useUrlQueryParam([\n    'editingProjectId',\n  ]);\n\n  const setUrlParams = useSetUrlSearchParam();\n  const { data: editingProject, isLoading } = useProject(\n    Number(editingProjectId)\n  );\n\n  const open = () => setProjectCreate({ projectCreate: true });\n  const close = (isRefresh: boolean) => {\n    if (isRefresh) {\n      setUrlParams({\n        projectCreate: '',\n        editingProjectId: '',\n        principalId: '',\n        keyword: '',\n      });\n    } else {\n      setUrlParams({\n        projectCreate: '',\n        editingProjectId: '',\n      });\n    }\n  };\n  const startEdit = (id: number) => {\n    setEditingProjectId({ editingProjectId: id });\n  };\n\n  return {\n    projectModalOpen: projectCreate === 'true' || Boolean(editingProjectId),\n    open,\n    close,\n    startEdit,\n    editingProject,\n    isLoading,\n  };\n};\n","import { Dropdown, Modal, Table, TableProps, Menu } from 'antd';\nimport dayjs from 'dayjs';\nimport { Link } from 'react-router-dom';\nimport { ButtonNoPadding } from '../../components/lib';\nimport { Pin } from '../../components/pin';\nimport { Project } from '../../types/project';\nimport { User } from '../../types/user';\nimport { Pin as Favorite } from '../../types/pin';\nimport { useOrganization } from '../../utils/organization';\nimport {\n  useDeleteProject,\n  usePinProject,\n  useProjectModal,\n  useProjectPinQueryKey,\n  useProjectQueryKey,\n} from '../../utils/project';\n\ninterface ListProps extends TableProps<Project> {\n  users: User[];\n  favorites: Favorite[];\n}\n\nexport const List = ({ users, favorites, ...props }: ListProps) => {\n  const { mutate } = usePinProject(useProjectPinQueryKey());\n  const pinProject = (projectId: number) => (pin: boolean) =>\n    mutate({ projectId, pin });\n\n  const { data: organizations } = useOrganization();\n\n  return (\n    <Table\n      rowKey={'projectId'}\n      pagination={false}\n      columns={[\n        {\n          title: <Pin checked={true} disabled={true} />,\n          render(value, project) {\n            return (\n              <Pin\n                checked={\n                  !!favorites?.find(\n                    (favorite) =>\n                      favorite.projectId === project.projectId &&\n                      favorite.pin === 1\n                  )\n                }\n                onCheckedChange={pinProject(project.projectId)}\n              />\n            );\n          },\n        },\n        {\n          title: 'Name',\n          render(value, project) {\n            return (\n              <Link to={String(project.projectId)}>\n                {decodeURI(project.projectName)}\n              </Link>\n            );\n          },\n        },\n        {\n          title: 'Principal',\n          render(value, project) {\n            return (\n              <span>\n                {users?.find((user) => user.id === project.principalId)?.name ||\n                  'unknown'}\n              </span>\n            );\n          },\n        },\n        {\n          title: 'Organization',\n          render(value, project) {\n            return (\n              <span>\n                {organizations?.find(\n                  (organization) => organization.id === project.organizationId\n                )?.name || 'unknown'}\n              </span>\n            );\n          },\n        },\n        {\n          title: 'Create Time',\n          render(value, project) {\n            return (\n              <span>\n                {project.createTime\n                  ? dayjs(project.createTime).format('DD/MM/YYYY')\n                  : 'unknown'}\n              </span>\n            );\n          },\n        },\n        {\n          render(value, project) {\n            return <More project={project} />;\n          },\n        },\n      ]}\n      {...props}\n    />\n  );\n};\n\nconst More = ({ project }: { project: Project }) => {\n  const { startEdit } = useProjectModal();\n  const editProject = (id: number) => () => startEdit(id);\n  const { mutate: deleteProject } = useDeleteProject(useProjectQueryKey());\n  const confirmDeleteProject = (project: Project) => {\n    Modal.confirm({\n      title: `Are you sure that you want to delete the project: ${decodeURI(\n        project.projectName\n      )}?`,\n      content: 'Click confirm to delete',\n      okText: 'Confirm',\n      onOk() {\n        deleteProject({ projectId: project.projectId });\n      },\n    });\n  };\n\n  return (\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item onClick={editProject(project.projectId)} key={'edit'}>\n            Edit\n          </Menu.Item>\n          <Menu.Item\n            onClick={() => confirmDeleteProject(project)}\n            key={'delete'}\n          >\n            Delete\n          </Menu.Item>\n        </Menu>\n      }\n    >\n      <ButtonNoPadding type={'link'}>...</ButtonNoPadding>\n    </Dropdown>\n  );\n};\n","import { SearchPanel } from './SearchPanel';\nimport { List } from './list';\nimport { useDebounce, useDocumentTitle } from '../../utils';\nimport { Button } from 'antd';\nimport { Row, ScreenContainer, ErrorBox } from '../../components/lib';\nimport {\n  useProjectModal,\n  useProjects,\n  useProjectSearchParams,\n  useFavroites,\n} from '../../utils/project';\nimport { useUsers } from '../../utils/user';\n\nexport const ProjectListScreen = () => {\n  useDocumentTitle('Project List', false);\n  const { open } = useProjectModal();\n  const [param, setParam] = useProjectSearchParams();\n  const { isLoading, error, data: list } = useProjects(useDebounce(param, 200));\n  const { data: favorites } = useFavroites();\n  const { data: users } = useUsers();\n\n  return (\n    <ScreenContainer>\n      <Row marginBottom={2} between={true}>\n        <h1>Project List</h1>\n        <Button style={{ padding: 0 }} onClick={open} type=\"link\">\n          Create Project\n        </Button>\n      </Row>\n      <SearchPanel users={users || []} param={param} setParam={setParam} />\n      <ErrorBox error={error} />\n      <List\n        loading={isLoading}\n        users={users || []}\n        favorites={favorites || []}\n        dataSource={list || []}\n      />\n    </ScreenContainer>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport {\n  Draggable,\n  DraggableProps,\n  Droppable,\n  DroppableProps,\n  DroppableProvided,\n  DroppableProvidedProps,\n} from 'react-beautiful-dnd';\n\ntype DropProps = Omit<DroppableProps, 'children'> & { children: ReactNode };\n\nexport const Drop = ({ children, ...props }: DropProps) => {\n  return (\n    <Droppable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            provided,\n          });\n        }\n        return <div />;\n      }}\n    </Droppable>\n  );\n};\n\ntype DropChildrenProps = Partial<\n  { provided: DroppableProvided } & DroppableProvidedProps\n> &\n  React.HTMLAttributes<HTMLDivElement>;\n\nexport const DropChild = React.forwardRef<HTMLDivElement, DropChildrenProps>(\n  ({ children, ...props }, ref) => (\n    <div ref={ref} {...props}>\n      {children}\n      {props.provided?.placeholder}\n    </div>\n  )\n);\n\ntype DragProps = Omit<DraggableProps, 'children'> & { children: ReactNode };\n\nexport const Drag = ({ children, ...props }: DragProps) => {\n  return (\n    <Draggable {...props}>\n      {(provided) => {\n        if (React.isValidElement(children)) {\n          return React.cloneElement(children, {\n            ...provided.dragHandleProps,\n            ...provided.draggableProps,\n            ref: provided.innerRef,\n          });\n        }\n        return <div />;\n      }}\n    </Draggable>\n  );\n};\n","import React, { ProfilerOnRenderCallback, ProfilerProps } from 'react';\n\ntype Props = { metadata?: any; phases?: ('mount' | 'update')[] } & Omit<\n  ProfilerProps,\n  'onRender'\n>;\n\nlet queue: unknown[] = [];\n\nconst sendProfileQueue = () => {\n  if (!queue.length) {\n    return;\n  }\n  const queueToSend = [...queue];\n  queue = [];\n};\n\nsetInterval(sendProfileQueue, 5000);\n\nexport const Profiler = ({ metadata, phases, ...props }: Props) => {\n  const reportProfile: ProfilerOnRenderCallback = (\n    id,\n    phase,\n    actualDuration,\n    baseDuration,\n    startTime,\n    commitTime,\n    interactions\n  ) => {\n    if (!phases || phases.includes(phase)) {\n      queue.push({\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime,\n        interactions,\n        metadata,\n      });\n    }\n  };\n  return <React.Profiler onRender={reportProfile} {...props} />;\n};\n","import { QueryKey, useMutation, useQuery } from 'react-query';\nimport { useLocation } from 'react-router';\nimport { Group } from '../types/group';\nimport { useHttp } from './http';\nimport { useAddConfig, useDeleteConfig } from './optimisticOptions';\nimport { useProject } from './project';\n\nexport const useGroups = (param?: Partial<Group>) => {\n  const client = useHttp();\n\n  return useQuery<Group[]>(['group', param], () =>\n    client('api/group/list', { req: param })\n  );\n};\n\nexport const useAddGroup = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    (params: Partial<Group>) =>\n      client('api/group', { req: params, method: 'POST' }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeleteGroup = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) => client(`api/group/${id}`, { method: 'DELETE' }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport const useProjectIdInUrl = () => {\n  const { pathname } = useLocation();\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\n  return Number(id);\n};\n\nexport const useProjectInUrl = () => useProject(useProjectIdInUrl());\n\nexport const useGroupSearchParams = () => ({ projectId: useProjectIdInUrl() });\n\nexport const useGroupQueryKey = () => ['group', useGroupSearchParams()];\n","import { QueryKey, useMutation, useQuery } from 'react-query';\nimport { useDebounce } from '.';\nimport { Task } from '../types/task';\nimport { TaskType } from '../types/taskType';\nimport { SortProps } from './board';\nimport { useHttp } from './http';\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useEditTaskConfig,\n  useReorderTaskConfig,\n} from './optimisticOptions';\n\nexport const useTasks = (param?: Partial<Task>) => {\n  const client = useHttp();\n  const debouncedParam = { ...param, name: useDebounce(param?.name, 200) };\n\n  return useQuery<Task[]>(['task', debouncedParam], () =>\n    client('api/task/list', { req: debouncedParam })\n  );\n};\n\nexport const useAddTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    (params: Partial<Task>) =>\n      client('api/task', {\n        req: params,\n        method: 'POST',\n      }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useTask = (id?: number) => {\n  const client = useHttp();\n  return useQuery<Task>(['task', { id }], () => client(`api/task/${id}`, {}), {\n    enabled: Boolean(id),\n  });\n};\n\nexport const useEditTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (params: Partial<Task>) =>\n      client(`api/task/${params.id}`, {\n        method: 'PATCH',\n        req: params,\n      }),\n    useEditTaskConfig(queryKey)\n  );\n};\n\nexport const useDeleteTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) =>\n      client(`api/task/${id}`, {\n        method: 'DELETE',\n      }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport const useReorderTask = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((params: SortProps) => {\n    return client('api/task/reorder', {\n      method: 'PATCH',\n      req: params,\n    });\n  }, useReorderTaskConfig(queryKey));\n};\n\nexport const useTaskTypes = () => {\n  const client = useHttp();\n  return useQuery<TaskType[]>(['taskTypes'], () =>\n    client('api/task/types', {})\n  );\n};\n","import { useCallback, useMemo } from 'react';\nimport { QueryKey, useMutation, useQuery } from 'react-query';\nimport { Board } from '../types/board';\nimport { useProjectIdInUrl } from './group';\nimport { useHttp } from './http';\nimport {\n  useAddConfig,\n  useDeleteConfig,\n  useReorderBoardConfig,\n} from './optimisticOptions';\nimport { useTask } from './task';\nimport { useUrlQueryParam } from './url';\n\nexport interface SortProps {\n  fromId: number;\n  referenceId: number;\n  fromBoardId?: number;\n  toBoardId?: number;\n}\n\nexport const useBoards = (param?: Partial<Board>) => {\n  const client = useHttp();\n\n  return useQuery<Board[]>(['board', param], () => {\n    return client('api/board/list', { req: param });\n  });\n};\n\nexport const useAddBoard = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation(\n    (param: Partial<Board>) =>\n      client('api/board', { req: param, method: 'POST' }),\n    useAddConfig(queryKey)\n  );\n};\n\nexport const useDeleteBoard = (queryKey: QueryKey) => {\n  const client = useHttp();\n\n  return useMutation(\n    ({ id }: { id: number }) => client(`api/board/${id}`, { method: 'DELETE' }),\n    useDeleteConfig(queryKey)\n  );\n};\n\nexport const useReorderBoard = (queryKey: QueryKey) => {\n  const client = useHttp();\n  return useMutation((param: SortProps) => {\n    return client('api/board/reorder', {\n      method: 'PATCH',\n      req: param,\n    });\n  }, useReorderBoardConfig(queryKey));\n};\n\nexport const useBoardSearchParams = () => ({ projectId: useProjectIdInUrl() });\n\nexport const useBoardQueryKey = () => ['board', useBoardSearchParams()];\n\nexport const useTaskSearchParam = () => {\n  const [param, setParam] = useUrlQueryParam([\n    'name',\n    'typeId',\n    'processorId',\n    'tagId',\n  ]);\n\n  const projectId = useProjectIdInUrl();\n  return useMemo(\n    () => ({\n      projectId,\n      typeId: Number(param.typeId) || undefined,\n      processorId: Number(param.processorId) || undefined,\n      tagId: Number(param.tagId) || undefined,\n      name: param.name,\n    }),\n    [projectId, param]\n  );\n};\n\nexport const useTaskQueryKey = () => ['task', useTaskSearchParam()];\n\nexport const useTaskModal = () => {\n  const [{ editingTaskId }, setEditingTaskId] = useUrlQueryParam([\n    'editingTaskId',\n  ]);\n\n  const { data: editingTask, isLoading } = useTask(Number(editingTaskId));\n  const startEdit = useCallback(\n    (id: number) => {\n      setEditingTaskId({ editingTaskId: id });\n    },\n    [setEditingTaskId]\n  );\n\n  const close = useCallback(() => {\n    setEditingTaskId({ editingTaskId: '' });\n  }, [setEditingTaskId]);\n  return {\n    editingTaskId,\n    editingTask,\n    startEdit,\n    close,\n    isLoading,\n  };\n};\n","export default __webpack_public_path__ + \"static/media/task.69774797.svg\";","export default __webpack_public_path__ + \"static/media/bug.5d8e8fd5.svg\";","export const Mark = ({ name, keyword }: { name: string; keyword: string }) => {\n  if (!keyword) {\n    return <>{name}</>;\n  }\n  const arr = name.split(keyword);\n  return (\n    <>\n      {arr.map((str, index) => (\n        <span key={index}>\n          {str}\n          {index === arr.length - 1 ? null : (\n            <span style={{ color: '#257AFD' }}>{keyword}</span>\n          )}\n        </span>\n      ))}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Input } from 'antd';\nimport { useState } from 'react';\nimport { useAddBoard, useBoardQueryKey } from '../../utils/board';\nimport { useProjectIdInUrl } from '../../utils/group';\n\nexport const CreateBoard = () => {\n  const [name, setName] = useState('');\n  const projectId = useProjectIdInUrl();\n  const { mutateAsync: addBoard } = useAddBoard(useBoardQueryKey());\n\n  const submit = async () => {\n    setName('');\n    await addBoard({ name, projectId });\n  };\n\n  return (\n    <Container>\n      <Input\n        size=\"large\"\n        placeholder=\"Please input a title for the new board\"\n        onPressEnter={submit}\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n    </Container>\n  );\n};\n\nexport const Container = styled.div`\n  min-width: 15rem;\n  border-radius: 6px;\n  background-color: rgb(244, 245, 247);\n  display: flex;\n  flex-direction: column;\n  padding: 0%.7re, 0.7rem 1rem;\n  margin-right: 1.5rem;\n`;\n","import { Card, Input } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { useTaskQueryKey } from '../../utils/board';\nimport { useProjectIdInUrl } from '../../utils/group';\nimport { useAddTask } from '../../utils/task';\n\nexport const CreateTask = ({ boardId }: { boardId: number }) => {\n  const [name, setName] = useState('');\n  const { mutateAsync: addTask } = useAddTask(useTaskQueryKey());\n  const projectId = useProjectIdInUrl();\n  const [inputMode, setInputMode] = useState(false);\n\n  const submit = async () => {\n    setInputMode(false);\n    setName('');\n    await addTask({ projectId, name, boardId });\n  };\n\n  const toggle = () => setInputMode((mode) => !mode);\n\n  useEffect(() => {\n    if (!inputMode) {\n      setName('');\n    }\n  }, [inputMode]);\n\n  if (!inputMode) {\n    return <div onClick={toggle}>+ Create an event</div>;\n  }\n\n  return (\n    <Card>\n      <Input\n        onBlur={toggle}\n        placeholder=\"Things need to be done\"\n        autoFocus={true}\n        onPressEnter={submit}\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n    </Card>\n  );\n};\n","import { useTasks, useTaskTypes } from '../../utils/task';\nimport taskIcon from '../../assets/task.svg';\nimport bugIcon from '../../assets/bug.svg';\nimport { Task } from '../../types/task';\nimport {\n  useBoardQueryKey,\n  useDeleteBoard,\n  useTaskModal,\n  useTaskSearchParam,\n} from '../../utils/board';\nimport { Button, Card, Dropdown, Menu, Modal } from 'antd';\nimport { Mark } from '../../components/mark';\nimport styled from '@emotion/styled';\nimport { Board } from '../../types/board';\nimport React from 'react';\nimport { Container } from './createBoard';\nimport { Row } from '../../components/lib';\nimport { Drag, Drop, DropChild } from '../../components/dragAndDrop';\nimport { CreateTask } from './createTask';\n\nconst TaskTypeIcon = ({ id }: { id: number }) => {\n  const { data: taskTypes } = useTaskTypes();\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name;\n  if (!name) {\n    return null;\n  }\n  return <img alt={'task-icon'} src={name === 'task' ? taskIcon : bugIcon} />;\n};\n\nconst TaskCard = ({ task }: { task: Task }) => {\n  const { startEdit } = useTaskModal();\n  const { name: keyword } = useTaskSearchParam();\n  return (\n    <Card\n      onClick={() => startEdit(task.id)}\n      style={{ marginBottom: '0.5rem', cursor: 'pointer' }}\n      key={task.id}\n    >\n      <p>\n        <Mark keyword={keyword} name={decodeURI(task.name)} />\n      </p>\n      <TaskTypeIcon id={task.typeId} />\n    </Card>\n  );\n};\n\nexport const BoardColumn = React.forwardRef<HTMLDivElement, { board: Board }>(\n  ({ board, ...props }, ref) => {\n    const { data: allTasks } = useTasks(useTaskSearchParam());\n    const tasks = allTasks?.filter((task) => task.boardId === board.id);\n    return (\n      <Container {...props} ref={ref}>\n        <Row between={true}>\n          <h3>{decodeURI(board.name)}</h3>\n          <More board={board} key={board.id} />\n        </Row>\n        <TaskContainer>\n          <Drop\n            type={'ROW'}\n            direction={'vertical'}\n            droppableId={String(board.id)}\n          >\n            <DropChild style={{ minHeight: '1rem' }}>\n              {tasks?.map((task, taskIndex) => (\n                <Drag\n                  key={task.id}\n                  index={taskIndex}\n                  draggableId={'task' + task.id}\n                >\n                  <div>\n                    <TaskCard key={task.id} task={task} />\n                  </div>\n                </Drag>\n              ))}\n            </DropChild>\n          </Drop>\n          <CreateTask boardId={board.id} />\n        </TaskContainer>\n      </Container>\n    );\n  }\n);\n\nconst More = ({ board }: { board: Board }) => {\n  const { mutateAsync } = useDeleteBoard(useBoardQueryKey());\n  const startDelete = () => {\n    Modal.confirm({\n      okText: 'Confirm',\n      cancelText: 'Cancel',\n      title: 'Are you sure that you want to delete the board?',\n      onOk() {\n        return mutateAsync({ id: board.id });\n      },\n    });\n  };\n  const overlay = (\n    <Menu>\n      <Menu.Item>\n        <Button type={'link'} onClick={startDelete}>\n          Delete\n        </Button>\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <Dropdown overlay={overlay}>\n      <Button type=\"link\">...</Button>\n    </Dropdown>\n  );\n};\n\nconst TaskContainer = styled.div`\n  overflow: scroll;\n  flex: 1;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n","import React from 'react';\nimport { useTaskTypes } from '../utils/task';\nimport { IdSelect } from './idSelect';\n\nexport const TaskTypeSelect = (\n  props: React.ComponentProps<typeof IdSelect>\n) => {\n  const { data: taskTypes } = useTaskTypes();\n  return <IdSelect options={taskTypes || []} {...props} />;\n};\n","import { Button, Input } from 'antd';\nimport { Row } from '../../components/lib';\nimport { TaskTypeSelect } from '../../components/taskTypeSelect';\nimport { UserSelect } from '../../components/userSelect';\nimport { useTaskSearchParam } from '../../utils/board';\nimport { useSetUrlSearchParam } from '../../utils/url';\n\nexport const SearchPanel = () => {\n  const searchParam = useTaskSearchParam();\n  const setSearchParam = useSetUrlSearchParam();\n  const reset = () => {\n    setSearchParam({\n      typeId: undefined,\n      processorId: undefined,\n      tagId: undefined,\n      name: undefined,\n    });\n  };\n\n  return (\n    <Row marginBottom={4} gap={true}>\n      <Input\n        style={{ width: '20rem' }}\n        placeholder={'Task name'}\n        value={searchParam.name}\n        onChange={(e) => setSearchParam({ name: e.target.value })}\n      />\n      <UserSelect\n        defaultOptionName={'Processor'}\n        value={searchParam.processorId}\n        onChange={(value) => setSearchParam({ processorId: value })}\n      />\n      <TaskTypeSelect\n        defaultOptionName={'Type'}\n        value={searchParam.typeId}\n        onChange={(value) => setSearchParam({ typeId: value })}\n      />\n      <Button onClick={reset}>Clean filter</Button>\n    </Row>\n  );\n};\n","import React from 'react';\nimport { useGroups, useGroupSearchParams } from '../utils/group';\nimport { IdSelect } from './idSelect';\n\nexport const GroupSelect = (props: React.ComponentProps<typeof IdSelect>) => {\n  const { data: groups } = useGroups(useGroupSearchParams());\n  return <IdSelect options={groups || []} {...props} />;\n};\n","import { Button, Form, Input, Layout, Modal } from 'antd';\nimport { useEffect } from 'react';\nimport { GroupSelect } from '../../components/groupSelect';\nimport { TaskTypeSelect } from '../../components/taskTypeSelect';\nimport { UserSelect } from '../../components/userSelect';\nimport { useTaskModal, useTaskQueryKey } from '../../utils/board';\nimport { useDeleteTask, useEditTask } from '../../utils/task';\n\nexport const TaskModal = () => {\n  const [form] = Form.useForm();\n  const { editingTaskId, editingTask, close } = useTaskModal();\n  const { mutateAsync: editTask, isLoading } = useEditTask(useTaskQueryKey());\n\n  const { mutate: deleteTask } = useDeleteTask(useTaskQueryKey());\n\n  const onCancel = () => {\n    close();\n    form.resetFields();\n  };\n\n  const onOk = async () => {\n    await editTask({ ...editingTask, ...form.getFieldsValue() });\n    close();\n  };\n\n  const startDelete = () => {\n    close();\n    Modal.confirm({\n      okText: 'Confirm',\n      cancelText: 'Cancel',\n      title: 'Are you sure that you want to delete the task group?',\n      onOk() {\n        return deleteTask({ id: Number(editingTaskId) });\n      },\n    });\n  };\n\n  useEffect(() => {\n    if (editingTask) {\n      const taskData = editingTask;\n      taskData.name = decodeURI(editingTask.name);\n      form.setFieldsValue(taskData);\n    }\n  }, [form, editingTask]);\n\n  return (\n    <Modal\n      forceRender={true}\n      onCancel={onCancel}\n      onOk={onOk}\n      okText={'Confirm'}\n      cancelText={'Cancel'}\n      confirmLoading={isLoading}\n      title={'Edit Task'}\n      visible={!!editingTask}\n    >\n      <Form {...layout} initialValues={editingTask} form={form}>\n        <Form.Item\n          label={'Task Name'}\n          name={'name'}\n          rules={[{ required: true, message: 'Please input the task name' }]}\n        >\n          <Input placeholder=\"Please input the task name\" />\n        </Form.Item>\n        <Form.Item label={'Task Group'} name={'groupId'}>\n          <GroupSelect defaultOptionName={'Task Group'} />\n        </Form.Item>\n        <Form.Item label={'Processor'} name={'processorId'}>\n          <UserSelect defaultOptionName={'Processor'} />\n        </Form.Item>\n        <Form.Item label={'Type'} name={'typeId'}>\n          <TaskTypeSelect defaultOptionName={'Type'} />\n        </Form.Item>\n      </Form>\n      <div style={{ textAlign: 'right' }}>\n        <Button\n          onClick={startDelete}\n          style={{ fontSize: '14px' }}\n          size={'small'}\n        >\n          Delete\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n","import styled from '@emotion/styled';\nimport { Spin } from 'antd';\nimport { useCallback } from 'react';\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd';\nimport { Drag, Drop, DropChild } from '../../components/dragAndDrop';\nimport { ScreenContainer } from '../../components/lib';\nimport { Profiler } from '../../components/profiler';\nimport { useDocumentTitle } from '../../utils';\n\nimport {\n  useBoardQueryKey,\n  useBoards,\n  useBoardSearchParams,\n  useReorderBoard,\n  useTaskQueryKey,\n  useTaskSearchParam,\n} from '../../utils/board';\nimport { useProjectInUrl } from '../../utils/group';\nimport { useReorderTask, useTasks } from '../../utils/task';\nimport { BoardColumn } from './boardColumn';\nimport { CreateBoard } from './createBoard';\nimport { SearchPanel } from './searchPanel';\nimport { TaskModal } from './taskModal';\n\nexport const BoardScreen = () => {\n  useDocumentTitle('Board List');\n\n  const { data: currentProject } = useProjectInUrl();\n  const { data: boards, isLoading: boardIsLoading } = useBoards(\n    useBoardSearchParams()\n  );\n  const { isLoading: taskIsLoading } = useTasks(useTaskSearchParam());\n  const isLoading = taskIsLoading || boardIsLoading;\n\n  const onDragEnd = useDragEnd();\n  return (\n    <Profiler id=\"BoardPage\">\n      <DragDropContext onDragEnd={onDragEnd}>\n        <ScreenContainer>\n          <h1>\n            {currentProject ? decodeURI(currentProject.projectName) : ''} Board\n          </h1>\n          <SearchPanel />\n          {isLoading ? (\n            <Spin size=\"large\" />\n          ) : (\n            <ColumnContainer>\n              <Drop\n                type=\"COLUMN\"\n                direction={'horizontal'}\n                droppableId={'board'}\n              >\n                <DropChild style={{ display: 'flex' }}>\n                  {boards?.map((board, index) => (\n                    <Drag\n                      key={board.id}\n                      draggableId={'board' + board.id}\n                      index={index}\n                    >\n                      <BoardColumn board={board} key={board.id} />\n                    </Drag>\n                  ))}\n                </DropChild>\n              </Drop>\n              <CreateBoard />\n            </ColumnContainer>\n          )}\n          <TaskModal />\n        </ScreenContainer>\n      </DragDropContext>\n    </Profiler>\n  );\n};\n\nconst useDragEnd = () => {\n  const { data: boards } = useBoards(useBoardSearchParams());\n  const { mutate: reorderBoard } = useReorderBoard(useBoardQueryKey());\n  const { mutate: reorderTask } = useReorderTask(useTaskQueryKey());\n  const { data: allTasks = [] } = useTasks(useTaskSearchParam());\n  return useCallback(\n    ({ source, destination, type }: DropResult) => {\n      if (!destination) {\n        return;\n      }\n      if (type === 'COLUMN') {\n        const fromId = boards?.[source.index].id;\n        const toId = boards?.[destination.index].id;\n        if (!fromId || !toId || fromId === toId) {\n          return;\n        }\n        reorderBoard({ fromId, referenceId: toId });\n      }\n      if (type === 'ROW') {\n        const fromBoardId = +source.droppableId;\n        const toBoardId = +destination.droppableId;\n        const fromTask = allTasks.filter(\n          (task) => task.boardId === fromBoardId\n        )[source.index];\n        const toTask = allTasks.filter((task) => task.boardId === toBoardId)[\n          destination.index\n        ];\n\n        if (fromTask?.id === toTask?.id) {\n          return;\n        }\n        reorderTask({\n          fromId: fromTask?.id,\n          referenceId: toTask?.id,\n          fromBoardId,\n          toBoardId,\n        });\n      }\n    },\n    [boards, reorderBoard, allTasks, reorderTask]\n  );\n};\n\nexport const ColumnContainer = styled.div`\n  display: 'flex';\n  overflow-x: scroll;\n  flex: 1;\n`;\n","import styled from '@emotion/styled';\nimport { Drawer, Input, Form, Spin, Button } from 'antd';\nimport { useEffect } from 'react';\nimport { ErrorBox } from '../../components/lib';\nimport { Task } from '../../types/task';\nimport {\n  useAddGroup,\n  useProjectIdInUrl,\n  useGroupQueryKey,\n} from '../../utils/group';\n\nexport const CreateTaskGroup = (props: {\n  visible: boolean;\n  onClose: () => void;\n}) => {\n  const { mutate: addTask, isLoading, error } = useAddGroup(useGroupQueryKey());\n  const [form] = Form.useForm();\n  const projectId = useProjectIdInUrl();\n\n  const onFinish = async (values: Task) => {\n    await addTask({ ...values, projectId });\n    props.onClose();\n  };\n\n  useEffect(() => {\n    form.resetFields();\n  }, [form, props.visible]);\n\n  return (\n    <Drawer\n      visible={props.visible}\n      onClose={props.onClose}\n      forceRender={true}\n      destroyOnClose={true}\n      width={'100%'}\n    >\n      <Container>\n        {isLoading ? (\n          <Spin size={'large'} />\n        ) : (\n          <>\n            <h1>Create a task</h1>\n            <ErrorBox error={error} />\n            <Form\n              form={form}\n              layout={'vertical'}\n              style={{ width: '40rem' }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                label={'Name'}\n                name={'name'}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please input task name',\n                  },\n                ]}\n              >\n                <Input placeholder={'Please input task name'} />\n              </Form.Item>\n\n              <Form.Item style={{ textAlign: 'right' }}>\n                <Button\n                  loading={isLoading}\n                  type={'primary'}\n                  htmlType={'submit'}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        )}\n      </Container>\n    </Drawer>\n  );\n};\n\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Button, Modal, List } from 'antd';\nimport { useState } from 'react';\nimport { Row, ScreenContainer } from '../../components/lib';\nimport { Group } from '../../types/group';\nimport { Task } from '../../types/task';\nimport {\n  useProjectInUrl,\n  useGroups,\n  useGroupSearchParams,\n  useDeleteGroup,\n  useGroupQueryKey,\n} from '../../utils/group';\nimport { CreateTaskGroup } from './createTaskGroup';\n\nexport const TaskGroupScreen = () => {\n  const { data: currentProject } = useProjectInUrl();\n  const { data: groups } = useGroups(useGroupSearchParams());\n  const { mutate: deleteGroup } = useDeleteGroup(useGroupQueryKey());\n  const [groupCreateOpen, setGroupCreateOpen] = useState(false);\n\n  const confirmDeleteGroup = (taskGroup: Group) => {\n    Modal.confirm({\n      title: `Are you sure that you want to delete the task group: ${decodeURI(\n        taskGroup.name\n      )}?`,\n      content: 'Click confirm to delete',\n      okText: 'Confirm',\n      onOk() {\n        deleteGroup({ id: taskGroup.id });\n      },\n    });\n  };\n\n  return (\n    <ScreenContainer>\n      <Row between={true}>\n        <h1>\n          {currentProject ? decodeURI(currentProject?.projectName) : ''} Task\n          Group\n        </h1>\n        <Button onClick={() => setGroupCreateOpen(true)} type={'link'}>\n          Create A Task Group\n        </Button>\n      </Row>\n      <List\n        style={{ overflow: 'scroll' }}\n        dataSource={groups}\n        itemLayout={'vertical'}\n        renderItem={(group) => (\n          <List.Item>\n            <List.Item.Meta\n              title={\n                <Row between={true}>\n                  <span>{decodeURI(group.name)}</span>\n                  <Button\n                    onClick={() => confirmDeleteGroup(group)}\n                    type={'link'}\n                  >\n                    Delete\n                  </Button>\n                </Row>\n              }\n              // description={\n              //   <div>\n              //     <div>Start time: </div>\n              //     <div>End time: </div>\n              //   </div>\n              // }\n            />\n            <div>{}</div>\n          </List.Item>\n        )}\n      ></List>\n      <CreateTaskGroup\n        onClose={() => setGroupCreateOpen(false)}\n        visible={groupCreateOpen}\n      />\n    </ScreenContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Menu } from 'antd';\nimport { Routes, Route, Link, Navigate, useLocation } from 'react-router-dom';\nimport { BoardScreen } from '../board';\nimport { TaskGroupScreen } from '../task';\n\nconst useRouteType = () => {\n  const units = useLocation().pathname.split('/');\n  return units[units.length - 1];\n};\n\nexport const ProjectScreen = () => {\n  const routeType = useRouteType();\n  return (\n    <Container>\n      <Aside>\n        <Menu mode=\"inline\" selectedKeys={[routeType]}>\n          <Menu.Item key=\"board\">\n            <Link to={'board'}>Board</Link>\n          </Menu.Item>\n          <Menu.Item key=\"task\">\n            <Link to={'task'}>Task Group</Link>\n          </Menu.Item>\n        </Menu>\n      </Aside>\n      <Main>\n        <Routes>\n          <Route path={'/board'} element={<BoardScreen />} />\n          <Route path={'/task'} element={<TaskGroupScreen />} />\n          <Route path=\"/*\" element={<Navigate to=\"board\" />} />\n        </Routes>\n      </Main>\n    </Container>\n  );\n};\n\nconst Aside = styled.aside`\n  background-color: rgb(244, 245, 247);\n  display: flex;\n`;\n\nconst Main = styled.div`\n  box-shadow: -5px 0 5px -5px rgb(0, 0, 0, 0.1);\n  display: flex;\n  overflow: hidden;\n`;\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 16rem 1fr;\n  width: 100%;\n`;\n","import React from 'react';\nimport { useOrganization } from '../utils/organization';\nimport { IdSelect } from './idSelect';\n\nexport const OrganizationSelect = (\n  props: React.ComponentProps<typeof IdSelect>\n) => {\n  const { data: organizations } = useOrganization();\n  return <IdSelect options={organizations || []} {...props} />;\n};\n","import styled from '@emotion/styled';\nimport { Button, Drawer, Form, Input, Spin } from 'antd';\nimport { useEffect } from 'react';\nimport { ErrorBox } from '../../components/lib';\nimport { OrganizationSelect } from '../../components/organizationSelect';\nimport { UserSelect } from '../../components/userSelect';\nimport {\n  useAddProject,\n  useEditProject,\n  useProjectModal,\n  useProjectQueryKey,\n} from '../../utils/project';\n\nexport const ProjectModal = () => {\n  const { projectModalOpen, close, editingProject, isLoading } =\n    useProjectModal();\n  const useMutateProject = editingProject ? useEditProject : useAddProject;\n\n  const {\n    mutateAsync,\n    error,\n    isLoading: mutateLoading,\n  } = useMutateProject(useProjectQueryKey());\n\n  const [form] = Form.useForm();\n  const onFinish = (value: any) => {\n    mutateAsync({ ...editingProject, ...value, createTime: new Date() });\n    form.resetFields();\n    close(false);\n  };\n\n  const closeModal = () => {\n    form.resetFields();\n    close(false);\n  };\n\n  const title = editingProject ? 'Edit Project' : 'Create Project';\n\n  useEffect(() => {\n    if (editingProject) {\n      editingProject.projectName = decodeURI(editingProject.projectName);\n    }\n    form.setFieldsValue(editingProject);\n  }, [editingProject, form]);\n\n  return (\n    <Drawer\n      forceRender={true}\n      onClose={closeModal}\n      visible={projectModalOpen}\n      width={'100%'}\n    >\n      <Container>\n        {isLoading ? (\n          <Spin size={'large'} />\n        ) : (\n          <>\n            <h1>{title}</h1>\n            <ErrorBox error={error} />\n            <Form\n              form={form}\n              layout={'vertical'}\n              style={{ width: '40rem' }}\n              onFinish={onFinish}\n            >\n              <Form.Item\n                label={'name'}\n                name={'projectName'}\n                rules={[\n                  { required: true, message: 'Please input project name' },\n                ]}\n              >\n                <Input placeholder={'Please input project name'} />\n              </Form.Item>\n\n              <Form.Item\n                label={'organization'}\n                name={'organizationId'}\n                rules={[\n                  { required: true, message: 'Please select an organization' },\n                ]}\n              >\n                <OrganizationSelect defaultOptionName={'organization'} />\n              </Form.Item>\n\n              <Form.Item\n                label={'principal'}\n                name={'principalId'}\n                rules={[\n                  { required: true, message: 'Please select a principal' },\n                ]}\n              >\n                <UserSelect defaultOptionName={'principal'} />\n              </Form.Item>\n\n              <Form.Item style={{ textAlign: 'right' }}>\n                <Button\n                  loading={mutateLoading}\n                  type={'primary'}\n                  htmlType={'submit'}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </>\n        )}\n      </Container>\n    </Drawer>\n  );\n};\n\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from '@emotion/styled';\nimport { Divider, List, Popover, Typography } from 'antd';\nimport { useFavroites, useProjectModal, useProjects } from '../utils/project';\nimport { ButtonNoPadding } from './lib';\n\nexport const ProjectPopover = () => {\n  const { open } = useProjectModal();\n  const { data: projects, refetch } = useProjects();\n  const { data: favorites } = useFavroites();\n  const pinnedProjects = projects?.filter((project) =>\n    favorites?.find(\n      (favorite) =>\n        favorite.projectId === project.projectId && favorite.pin === 1\n    )\n  );\n\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={'secondary'}>Favorite Projects</Typography.Text>\n      <List>\n        {pinnedProjects?.map((project) => (\n          <List.Item key={project.projectId}>\n            <List.Item.Meta title={decodeURI(project.projectName)} />\n          </List.Item>\n        ))}\n      </List>\n      <Divider />\n      <ButtonNoPadding onClick={open} type={'link'}>\n        Create Project\n      </ButtonNoPadding>\n    </ContentContainer>\n  );\n\n  return (\n    <Popover\n      placement={'bottom'}\n      content={content}\n      onVisibleChange={() => refetch()}\n    >\n      <h2>Projects</h2>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`;\n","import styled from '@emotion/styled';\nimport { Typography, List, Divider, Popover } from 'antd';\nimport { useUsers } from '../utils/user';\n\nexport const UserPopover = () => {\n  const { data: users, refetch } = useUsers();\n\n  const content = (\n    <ContentContainer>\n      <Typography.Text type={'secondary'}>Group Members</Typography.Text>\n      <List>\n        {users?.map((user) => (\n          <List.Item key={user.id}>\n            <List.Item.Meta title={user.name} />\n          </List.Item>\n        ))}\n      </List>\n      <Divider />\n    </ContentContainer>\n  );\n\n  return (\n    <Popover\n      onVisibleChange={() => refetch()}\n      placement=\"bottom\"\n      content={content}\n    >\n      <h2>Members</h2>\n    </Popover>\n  );\n};\n\nconst ContentContainer = styled.div`\n  min-width: 30rem;\n`;\n","import styled from '@emotion/styled';\nimport { ButtonNoPadding, Row } from './components/lib';\nimport { useAuth } from './context/AuthContext';\nimport { ProjectListScreen } from './screens/projectList';\nimport { ReactComponent as SoftwareLogo } from './assets/software-logo.svg';\nimport { Button, Dropdown, Menu } from 'antd';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { ProjectScreen } from './screens/project';\nimport { resetRoute } from './utils';\nimport { ProjectModal } from './screens/projectList/projectModal';\nimport { ProjectPopover } from './components/projectPopover';\nimport { UserPopover } from './components/userPopover';\n\nexport const AuthenticatedApp = () => {\n  return (\n    <Container>\n      <PageHeader />\n      <Main>\n        <Routes>\n          <Route path=\"/projects\" element={<ProjectListScreen />} />\n          <Route path=\"/projects/:projectId/*\" element={<ProjectScreen />} />\n          <Route path=\"/\" element={<Navigate to=\"/projects\" />} />\n        </Routes>\n      </Main>\n      <ProjectModal />\n    </Container>\n  );\n};\n\nconst PageHeader = () => {\n  const { user, logout } = useAuth();\n  return (\n    <Header between={true}>\n      <HeaderLeft gap={true}>\n        <ButtonNoPadding type={'link'} onClick={resetRoute}>\n          <SoftwareLogo width={'12rem'} color={'rgb(38,132,255)'} />\n        </ButtonNoPadding>\n        <ProjectPopover />\n        <UserPopover />\n      </HeaderLeft>\n      <HeaderRight>\n        <Dropdown\n          overlay={\n            <Menu>\n              <Menu.Item key={'logout'}>\n                <Button type={'link'} onClick={logout}>\n                  logout\n                </Button>\n              </Menu.Item>\n            </Menu>\n          }\n        >\n          <Button type=\"link\" onClick={(e) => e.preventDefault()}>\n            Hi, {user?.name}\n          </Button>\n        </Dropdown>\n      </HeaderRight>\n    </Header>\n  );\n};\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: 6rem 1fr;\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst Header = styled(Row)`\n  padding: 3.2rem;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.1);\n  z-index: 1;\n`;\n\nconst HeaderLeft = styled(Row)``;\nconst HeaderRight = styled.div``;\nconst Main = styled.main`\n  display: flex;\n  overflow: hidden;\n`;\n","export default __webpack_public_path__ + \"static/media/logo.6c866125.svg\";","export default __webpack_public_path__ + \"static/media/left.e74de3ec.svg\";","export default __webpack_public_path__ + \"static/media/right.b423a6cf.svg\";","import { FormEvent } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { Form, Input, Button } from 'antd';\nimport { LongButton } from '.';\nimport { useAsync } from '../utils/useAsync';\n\nexport const RegisterScreen = ({\n  onError,\n}: {\n  onError: (error: Error) => void;\n}) => {\n  const { register } = useAuth();\n  const { isLoading, run } = useAsync();\n  const handleSubmit = async (values: {\n    username: string;\n    password: string;\n    confirmPassword: string;\n  }) => {\n    try {\n      if (values.password === values.confirmPassword) {\n        await run(register(values));\n      } else {\n        onError(new Error('Inconsistent passwords'));\n      }\n    } catch (e: any) {\n      onError(e);\n    }\n  };\n\n  return (\n    <Form onFinish={handleSubmit}>\n      <Form.Item\n        name={'username'}\n        rules={[{ required: true, message: 'Please input username' }]}\n      >\n        <Input placeholder={'username'} type=\"text\" id={'username'} />\n      </Form.Item>\n      <Form.Item\n        name={'password'}\n        rules={[{ required: true, message: 'Please input password' }]}\n      >\n        <Input placeholder={'password'} type=\"password\" id={'password'} />\n      </Form.Item>\n      <Form.Item\n        name={'confirmPassword'}\n        rules={[{ required: true, message: 'Please confirm password' }]}\n      >\n        <Input\n          placeholder={'confirm password'}\n          type=\"password\"\n          id={'confirmPassword'}\n        />\n      </Form.Item>\n      <Form.Item>\n        <LongButton loading={isLoading} htmlType={'submit'} type={'primary'}>\n          Register\n        </LongButton>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { FormEvent } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { Button, Form, Input } from 'antd';\nimport { LongButton } from '.';\nimport { useAsync } from '../utils/useAsync';\n\nexport const LoginScreen = ({\n  onError,\n}: {\n  onError: (error: Error) => void;\n}) => {\n  const { login } = useAuth();\n  const { isLoading, run } = useAsync();\n  const handleSubmit = async (values: {\n    username: string;\n    password: string;\n  }) => {\n    try {\n      await run(login(values));\n    } catch (e: any) {\n      onError(e);\n    }\n  };\n  return (\n    <Form onFinish={handleSubmit}>\n      <Form.Item\n        name={'username'}\n        rules={[{ required: true, message: 'Please input username' }]}\n      >\n        <Input placeholder={'username'} type=\"text\" id={'username'} />\n      </Form.Item>\n      <Form.Item\n        name={'password'}\n        rules={[{ required: true, message: 'Please input password' }]}\n      >\n        <Input placeholder={'password'} type=\"password\" id={'password'} />\n      </Form.Item>\n      <Form.Item>\n        <LongButton loading={isLoading} htmlType={'submit'} type={'primary'}>\n          Login\n        </LongButton>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { useState } from 'react';\nimport { Button, Card, Divider, Typography } from 'antd';\nimport styled from '@emotion/styled';\nimport logo from '../assets/logo.svg';\nimport left from '../assets/left.svg';\nimport right from '../assets/right.svg';\nimport { RegisterScreen } from './register';\nimport { LoginScreen } from './login';\nimport { useDocumentTitle } from '../utils';\n\nexport const UnauthenticatedApp = () => {\n  const [isRegister, setIsRegister] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  useDocumentTitle('Login or Register to Jira', false);\n  return (\n    <Container>\n      <Header />\n      <Background />\n      <ShadowCard>\n        <Title>{isRegister ? 'Creat New Account' : 'Login'}</Title>\n        {error ? (\n          <Typography.Text type={'danger'}>{error.message}</Typography.Text>\n        ) : null}\n        {isRegister ? (\n          <RegisterScreen onError={setError} />\n        ) : (\n          <LoginScreen onError={setError} />\n        )}\n        <Divider />\n        <Button\n          onClick={() => {\n            setIsRegister(!isRegister);\n            setError(null);\n          }}\n        >\n          {isRegister ? 'Login' : 'Creat New Account'}\n        </Button>\n      </ShadowCard>\n    </Container>\n  );\n};\n\nexport const LongButton = styled(Button)`\n  width: 100%;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 2.4rem;\n  color: rgb(94, 108, 132);\n`;\n\nconst Background = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-repeat: no-repeat;\n  background-attachment: fixed;\n  background-position: left bottom, right bottom;\n  background-size: calc(((100vw - 40rem) / 2) - 3.2rem),\n    calc(((100vw - 40rem) / 2) - 3.2rem), cover;\n  background-image: url(${left}), url(${right});\n`;\n\nconst Header = styled.header`\n  background: url(${logo}) no-repeat center;\n  padding: 5rem 0;\n  background-size: 8rem;\n  width: 100%;\n`;\n\nconst ShadowCard = styled(Card)`\n  width: 40rem;\n  max-height: 56rem;\n  padding: 3.2rem 4rem;\n  border-radius: 0.3rem;\n  box-sizing: border-box;\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 100vh;\n`;\n","import { AuthenticatedApp } from './AuthenticatedApp';\nimport { useAuth } from './context/AuthContext';\nimport { UnauthenticatedApp } from './unauthenticatedApp';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nfunction App() {\n  const { user } = useAuth();\n  return (\n    <div className=\"App\">\n      <ReactQueryDevtools initialIsOpen={false} />\n      {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ReactNode } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { AuthProvider } from './AuthContext';\n\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false,\n      },\n    },\n  });\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Router>\n        <AuthProvider>{children}</AuthProvider>\n      </Router>\n    </QueryClientProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AppProviders } from './context';\nimport 'antd/dist/antd.less';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProviders>\n      <App />\n    </AppProviders>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}